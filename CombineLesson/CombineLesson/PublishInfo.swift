//
//  PublishInfo.swift
//  CombineLesson
//
//  Created by Ali on 30.01.2025.
//

import Combine
import Foundation

// –í Combine –µ—Å—Ç—å —Ä–∞–∑–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã —Å–æ–∑–¥–∞—Ç—å Publisher (–∏–∑–¥–∞—Ç–µ–ª—è) –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∑–∞–¥–∞—á–∏. –î–∞–≤–∞–π —Ä–∞–∑–±–µ—Ä—ë–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏.

class PublishInfo {
    /// üîπ 1. Just ‚Äì –û—Ç–ø—Ä–∞–≤–∫–∞ –æ–¥–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è
    /// –ï—Å–ª–∏ —Ç–µ–±–µ –Ω—É–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–¥–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ –∏ –∑–∞–≤–µ—Ä—à–∏—Ç—å –ø–æ—Ç–æ–∫, –∏—Å–ø–æ–ª—å–∑—É–π Just.
    
    /// ‚úÖ –ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å?
    /// –ö–æ–≥–¥–∞ –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å –æ–¥–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ –∏ –∑–∞–≤–µ—Ä—à–∏—Ç—å –ø–æ—Ç–æ–∫.
    func justInit() {
        let publisher = Just("–ü—Ä–∏–≤–µ—Ç, Combine!")

        let subs = publisher.sink { value in
            print(value) // "–ü—Ä–∏–≤–µ—Ç, Combine!"
        }
    }
    
    /**
     üîπ 2. Future ‚Äì –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è
     –ï—Å–ª–∏ —Ç–µ–±–µ –Ω—É–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∫–æ–¥ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö), –∏—Å–ø–æ–ª—å–∑—É–π Future.
     
     ‚úÖ –ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å?
     –ö–æ–≥–¥–∞ —Ç—ã —Ä–∞–±–æ—Ç–∞–µ—à—å —Å –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–º–∏ –∑–∞–¥–∞—á–∞–º–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, API-–∑–∞–ø—Ä–æ—Å).
     */
    func futureInit() {
        let futurePublisher = Future<String, Never> { promise in
            DispatchQueue.global().asyncAfter(deadline: .now() + 2) {
                promise(.success(""))
            }
        }

        _ = futurePublisher
            .sink { print($0) } // –í—ã–≤–µ–¥–µ—Ç —á–µ—Ä–µ–∑ 2 —Å–µ–∫: "–î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã!"
    }
    
    /**
     üîπ 3. Deferred ‚Äì –û—Ç–ª–æ–∂–µ–Ω–Ω—ã–π –∑–∞–ø—É—Å–∫
     Deferred –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ–∑–¥–∞—Ç—å Publisher, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–∑–¥–∞—ë—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –ø–æ–¥–ø–∏—Å–∫–µ.
     
     ‚úÖ –ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å?
     –ö–æ–≥–¥–∞ —Ö–æ—á–µ—à—å –æ—Ç–ª–æ–∂–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–æ –º–æ–º–µ–Ω—Ç–∞ –ø–æ–¥–ø–∏—Å–∫–∏.
     */
    func defferedInit() {
        let deferredPublisher = Deferred {
            Just("–≠—Ç–æ—Ç —Ç–µ–∫—Å—Ç –ø–æ—è–≤–∏–ª—Å—è –ø—Ä–∏ –ø–æ–¥–ø–∏—Å–∫–µ!")
        }

        _ = deferredPublisher
            .sink { print($0) } // "–≠—Ç–æ—Ç —Ç–µ–∫—Å—Ç –ø–æ—è–≤–∏–ª—Å—è –ø—Ä–∏ –ø–æ–¥–ø–∏—Å–∫–µ!"
    }
    
    /**
     üîπ 4. Timer ‚Äì –¢–∞–π–º–µ—Ä (–∏–Ω—Ç–µ—Ä–≤–∞–ª—å–Ω—ã–π Publisher)
     –ï—Å–ª–∏ —Ç–µ–±–µ –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø–æ—Ç–æ–∫ —Å –≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞–º–∏, –∏—Å–ø–æ–ª—å–∑—É–π Timer.publish.
     
     ‚úÖ –ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å?
     –ö–æ–≥–¥–∞ –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–µ —Å–æ–±—ã—Ç–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, –æ–±–Ω–æ–≤–ª—è—Ç—å –¥–∞–Ω–Ω—ã–µ –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É).
     */
    
    func timerInit() {
        let timerPublisher = Timer.publish(every: 1, on: .main, in: .common)
            .autoconnect() // –ê–≤—Ç–æ–∑–∞–ø—É—Å–∫ —Ç–∞–π–º–µ—Ä–∞

        let cancellable = timerPublisher
            .sink { time in
                print("–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è: \(time)")
            }

    }
    
    /**
     üîπ 5. PassthroughSubject ‚Äì –†—É—á–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö
     –ï—Å–ª–∏ —Ç–µ–±–µ –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å —Å–æ–±—ã—Ç–∏—è –≤—Ä—É—á–Ω—É—é (–Ω–∞–ø—Ä–∏–º–µ—Ä, –Ω–∞–∂–∞–ª–∏ –∫–Ω–æ–ø–∫—É), –∏—Å–ø–æ–ª—å–∑—É–π PassthroughSubject.
     
     ‚úÖ –ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å?
     –ö–æ–≥–¥–∞ –Ω—É–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –¥–∞–Ω–Ω—ã–µ –≤—Ä—É—á–Ω—É—é (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–æ –Ω–∞–∂–∞—Ç–∏—é –∫–Ω–æ–ø–∫–∏).
     */
    func passthroughInit() {
        let subject = PassthroughSubject<Int, Never>()

        let subscription = subject.sink { value in
            print("–ü–æ–ª—É—á–µ–Ω–æ: \(value)")
        }

        subject.send(1) // "–ü–æ–ª—É—á–µ–Ω–æ: –°–æ–æ–±—â–µ–Ω–∏–µ 1"
        subject.send(2) // "–ü–æ–ª—É—á–µ–Ω–æ: –°–æ–æ–±—â–µ–Ω–∏–µ 2"
    }
    
    /**
     üîπ 6. CurrentValueSubject ‚Äì –•—Ä–∞–Ω–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
     –ï—Å–ª–∏ —Ç–µ–±–µ –Ω—É–∂–Ω–æ —Ö—Ä–∞–Ω–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –µ–≥–æ –Ω–æ–≤—ã–º –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º, –∏—Å–ø–æ–ª—å–∑—É–π CurrentValueSubject.
     
     ‚úÖ –ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å?
     –ö–æ–≥–¥–∞ —Ö–æ—á–µ—à—å —Ö—Ä–∞–Ω–∏—Ç—å —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏ –¥–µ–ª–∏—Ç—å—Å—è –∏–º —Å –Ω–æ–≤—ã–º–∏ –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º–∏.
     */
    
    func currentValue() {
        let currentValueSubject = CurrentValueSubject<Int, Never>(0)

        let subscription1 = currentValueSubject.sink { value in
            print("–ü–æ–¥–ø–∏—Å—á–∏–∫ 1: \(value)")
        }

        currentValueSubject.send(10) // "–ü–æ–¥–ø–∏—Å—á–∏–∫ 1: 10"
        currentValueSubject.send(20) // "–ü–æ–¥–ø–∏—Å—á–∏–∫ 1: 20"

        let subscription2 = currentValueSubject.sink { value in
            print("–ü–æ–¥–ø–∏—Å—á–∏–∫ 2: \(value)")
        }

        // "–ü–æ–¥–ø–∏—Å—á–∏–∫ 2: 20" (–Ω–æ–≤—ã–π –ø–æ–¥–ø–∏—Å—á–∏–∫ —Å—Ä–∞–∑—É –ø–æ–ª—É—á–∞–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ)
    }
    
    /**
     üîπ 7. URLSession.DataTaskPublisher ‚Äì –ó–∞–ø—Ä–æ—Å –≤ —Å–µ—Ç—å
     –ï—Å–ª–∏ —Ç–µ–±–µ –Ω—É–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–µ—Ç–∏, Combine –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç URLSession.
     
     ‚úÖ –ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å?
     –ö–æ–≥–¥–∞ –Ω—É–∂–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å —Å —Å–µ—Ç—å—é –≤ —Ä–µ–∞–∫—Ç–∏–≤–Ω–æ–º —Å—Ç–∏–ª–µ.
     */
    
    func urlInit() {
        let url = URL(string: "https://jsonplaceholder.typicode.com/todos/1")!

        let subscription = URLSession.shared.dataTaskPublisher(for: url)
            .map { $0.data }
            .decode(type: Todo.self, decoder: JSONDecoder())
            .sink(receiveCompletion: { print($0) },
                  receiveValue: { print($0) })

        struct Todo: Codable {
            let id: Int
            let title: String
        }

    }
}

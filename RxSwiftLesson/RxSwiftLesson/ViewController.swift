//
//  ViewController.swift
//  RxSwiftLesson
//
//  Created by Ali on 30.01.2025.
//

import RxSwift

import UIKit

class ViewController: UIViewController {

    let label: UILabel! = nil
    
    override func viewDidLoad() {
        super.viewDidLoad()
        // Do any additional setup after loading the view.
        
        let observablelist = Observable.of("–í–∏–¥–µ–æ 1", "–í–∏–¥–µ–æ 2", "–í–∏–¥–µ–æ 3")
        
        // –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Å–ª–æ–∂–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã –∏ –∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ –Ω–µ —Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞—Ç—å –∏—Ö (–∫–∞–∫ —Ç—É—Ç), –∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤–µ–∑–¥–µ —Ä–µ–∞–∫—Ç–∏–≤–Ω—ã–º –ø–æ–¥—Ö–æ–¥–æ–º –¥–∞–ª—å—à–µ.
        let sub = observablelist.subscribe({ event in
            switch event {
            case .completed:
                print("Finish")
            case .next(let value):
                print(value)
                self.handle(value) // –ø–æ–ø—ã—Ç–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏–ø–µ—Ä–∞—Ç–∏–≤–Ω—ã–º –º–µ—Ç–æ–¥
            case .error(let error):
                print(error)
            }
        })
        sub.dispose()
    }
    
    /// Non-reactive (imperative) method
    func handle(_ value: String) {
        
    }
    
    /**
     1Ô∏è‚É£ Observable (–ù–∞–±–ª—é–¥–∞–µ–º—ã–π) ‚Äì "YouTube-–∫–∞–Ω–∞–ª" üé•
     –ß—Ç–æ —ç—Ç–æ?
     üëâ –≠—Ç–æ –∏—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö, –∫–æ—Ç–æ—Ä—ã–π —Ä–∞–∑–¥–∞—ë—Ç –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º.

     –ê–Ω–∞–ª–æ–≥–∏—è:
     YouTube-–∫–∞–Ω–∞–ª üé• –≤—ã–∫–ª–∞–¥—ã–≤–∞–µ—Ç –Ω–æ–≤—ã–µ –≤–∏–¥–µ–æ. –í—ã –ø–æ–¥–ø–∏—Å—ã–≤–∞–µ—Ç–µ—Å—å –Ω–∞ –Ω–µ–≥–æ, –∏ –≤–∞–º –ø—Ä–∏—Ö–æ–¥—è—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.
     
     
     2Ô∏è‚É£ Observer (–ü–æ–¥–ø–∏—Å—á–∏–∫) ‚Äì "–ó—Ä–∏—Ç–µ–ª—å YouTube" üëÄ
     –ß—Ç–æ —ç—Ç–æ?
     üëâ –≠—Ç–æ –æ–±—ä–µ–∫—Ç, –∫–æ—Ç–æ—Ä—ã–π —Å–ª—É—à–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ—Ç Observable.

     –ê–Ω–∞–ª–æ–≥–∏—è:
     –í—ã –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ YouTube-–∫–∞–Ω–∞–ª –∏ –ø–æ–ª—É—á–∞–µ—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –≤–∏–¥–µ–æ.
     
     
     ‚úÖ –ß—Ç–æ –∑–¥–µ—Å—å –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç?

     Observable.of(...) ‚Äî —Å–æ–∑–¥–∞—ë–º –ø–æ—Ç–æ–∫ –¥–∞–Ω–Ω—ã—Ö (YouTube-–∫–∞–Ω–∞–ª).
     .subscribe {} ‚Äî –ø–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –∏ –ø–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è (—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è).
     
     ‚úÖ –ó–¥–µ—Å—å subscribe –ø–æ–¥–ø–∏—Å–∞–ª—Å—è –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏ —Å—Ä–∞–∑—É –ø–æ–ª—É—á–∏–ª –∑–Ω–∞—á–µ–Ω–∏–µ.
     */
    func simple() {
        let observable = Observable.of("–í–∏–¥–µ–æ 1", "–í–∏–¥–µ–æ 2", "–í–∏–¥–µ–æ 3")

        observable.subscribe { event in
            print(event)
        }
    }
    
    /**
     3Ô∏è‚É£ Operators (–û–ø–µ—Ä–∞—Ç–æ—Ä—ã) ‚Äì "–§–∏–ª—å—Ç—Ä—ã –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö" üéõ
     –ß—Ç–æ —ç—Ç–æ?
     üëâ –û–ø–µ—Ä–∞—Ç–æ—Ä—ã –ø–æ–∑–≤–æ–ª—è—é—Ç –∏–∑–º–µ–Ω—è—Ç—å –∏–ª–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å –ø–æ—Ç–æ–∫ –¥–∞–Ω–Ω—ã—Ö.

     –ê–Ω–∞–ª–æ–≥–∏—è:
     –í—ã —Å–º–æ—Ç—Ä–∏—Ç–µ YouTube, –Ω–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ä–µ–∫–ª–∞–º—É, —É—Å–∫–æ—Ä–∏—Ç—å –≤–∏–¥–µ–æ –∏–ª–∏ –ø–æ–º–µ–Ω—è—Ç—å —è–∑—ã–∫.
     
     */
    
    func filterExample() {
        // –ü—Ä–∏–º–µ—Ä: .map {} (–∏–∑–º–µ–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ)
        Observable.of(1, 2, 3, 4)
            .map { $0 * 10 } // –£–º–Ω–æ–∂–∞–µ–º –∫–∞–∂–¥–æ–µ —á–∏—Å–ª–æ –Ω–∞ 10
            .subscribe { print($0) }
        
        
        // –ü—Ä–∏–º–µ—Ä: .filter {} (–æ—Å—Ç–∞–≤–ª—è–µ–º –Ω—É–∂–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è)
        Observable.of(1, 2, 3, 4, 5, 6)
            .filter { $0 % 2 == 0 } // –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —á—ë—Ç–Ω—ã–µ
            .subscribe { print($0) }
    }
    
    /**
     –ß—Ç–æ —ç—Ç–æ?
     üëâ Subject ‚Äî —ç—Ç–æ –∏ Observable, –∏ Observer –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ.
     üëâ –ú–æ–∂–Ω–æ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –¥–∞–Ω–Ω—ã–µ, –∏ –ø–æ–¥–ø–∏—Å—ã–≤–∞—Ç—å—Å—è –Ω–∞ –Ω–∏—Ö.

     –ê–Ω–∞–ª–æ–≥–∏—è:
     –ü—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ WhatsApp-–≥—Ä—É–ø–ø—É.

     –õ—é–¥–∏ –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç —Å–æ–æ–±—â–µ–Ω–∏—è (send()).
     –î—Ä—É–≥–∏–µ —á–∏—Ç–∞—é—Ç –∏—Ö (subscribe()).
     
     ‚úÖ –ü–æ–∑–¥–Ω–∏–µ –ø–æ–¥–ø–∏—Å—á–∏–∫–∏ –Ω–µ –ø–æ–ª—É—á–∞—é—Ç –ø—Ä–æ—à–ª—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è (–∫–∞–∫ –≤ —á–∞—Ç–µ).
     */
    func subjectInit() {
        let subject = PublishSubject<String>()

        subject.subscribe { print("–ü–æ–¥–ø–∏—Å—á–∏–∫ 1: \($0)") }

        subject.onNext("–ü—Ä–∏–≤–µ—Ç!")
        subject.onNext("–ö–∞–∫ –¥–µ–ª–∞?")

        subject.subscribe { print("–ü–æ–¥–ø–∏—Å—á–∏–∫ 2: \($0)") }

        subject.onNext("–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!")
    }
    
    /**
     5Ô∏è‚É£ DisposeBag (–ú—É—Å–æ—Ä–∫–∞) ‚Äì "–û—Ç–ø–∏—Å–∫–∞ –æ—Ç –∫–∞–Ω–∞–ª–∞" üóë
     –ß—Ç–æ —ç—Ç–æ?
     üëâ –í RxSwift –ø–æ–¥–ø–∏—Å–∫–∏ –∂–∏–≤—É—Ç –≤–µ—á–Ω–æ, –ø–æ–∫–∞ –∏—Ö –Ω–µ —É–¥–∞–ª—è—Ç.
     üëâ DisposeBag –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—á–∏—â–∞–µ—Ç –ø–æ–¥–ø–∏—Å–∫–∏.

     –ê–Ω–∞–ª–æ–≥–∏—è:
     –ï—Å–ª–∏ –≤—ã –±–æ–ª—å—à–µ –Ω–µ —Ö–æ—Ç–∏—Ç–µ —Å–º–æ—Ç—Ä–µ—Ç—å YouTube-–∫–∞–Ω–∞–ª, –≤—ã –æ—Ç–ø–∏—Å—ã–≤–∞–µ—Ç–µ—Å—å.
     
     ‚úÖ –¢–µ–ø–µ—Ä—å –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–µ –±—É–¥—É—Ç —É—Ç–µ–∫–∞—Ç—å –≤ –ø–∞–º—è—Ç—å.
     */
    func disposeBagExample() {
        let disposeBag = DisposeBag()

        Observable.of("–ü—Ä–∏–≤–µ—Ç, RxSwift!")
            .subscribe { print($0) }
            .disposed(by: disposeBag) // –û—Ç–ø–∏—Å—ã–≤–∞–µ–º—Å—è, –∫–æ–≥–¥–∞ –æ–±—ä–µ–∫—Ç —É–¥–∞–ª–∏—Ç—Å—è

    }
}

